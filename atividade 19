package main

import (
	"errors"
	"fmt"
	"math"
)

func isPrime(n int) bool {
	if n < 2 {
		return false
	}

	// Verifica se n é divisível por algum número de 2 até a raiz quadrada de n
	limit := int(math.Sqrt(float64(n)))
	for i := 2; i <= limit; i++ {
		if n%i == 0 {
			return false
		}
	}

	return true
}

func getPrimes(n int) ([]int, error) {
	if n < 0 {
		return nil, errors.New("O número é negativo")
	}

	primes := []int{}
	for i := 2; i <= n; i++ {
		if isPrime(i) {
			primes = append(primes, i)
		}
	}

	return primes, nil
}

func main() {
	n := 20

	primeSlice, err := getPrimes(n)
	if err != nil {
		fmt.Println(err)
	} else {
		fmt.Println("Números primos até", n, ":", primeSlice)
	}

	negative := -5
	primeSlice, err = getPrimes(negative)
	if err != nil {
		fmt.Println(err)
	} else {
		fmt.Println("Números primos até", negative, ":", primeSlice)
	}
}
